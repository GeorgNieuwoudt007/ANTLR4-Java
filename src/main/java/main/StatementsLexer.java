// Generated from Statements.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class StatementsLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, BOOLEAN=8, NUMBER=9, 
		STRING=10, ID=11, AND=12, OR=13, LOGICAL_AND=14, LOGICAL_OR=15, ASSIGN=16, 
		PLUS=17, MINUS=18, MULT=19, DIV=20, LPAREN=21, RPAREN=22, LBRACE=23, RBRACE=24, 
		SEMI=25, LT=26, GT=27, EQ=28, NEQ=29, LTE=30, GTE=31, WS=32, COMMENT=33, 
		MULTILINE_COMMENT=34;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "BOOLEAN", "NUMBER", 
			"STRING", "ID", "AND", "OR", "LOGICAL_AND", "LOGICAL_OR", "ASSIGN", "PLUS", 
			"MINUS", "MULT", "DIV", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", 
			"LT", "GT", "EQ", "NEQ", "LTE", "GTE", "WS", "COMMENT", "MULTILINE_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'var'", "'if'", "'else'", "'while'", "'for'", "'|'", "'print'", 
			null, null, null, null, "'and'", "'or'", "'&&'", "'||'", "'='", "'+'", 
			"'-'", "'*'", "'/'", "'('", "')'", "'{'", "'}'", "';'", "'<'", "'>'", 
			"'=='", "'!='", "'<='", "'>='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, "BOOLEAN", "NUMBER", 
			"STRING", "ID", "AND", "OR", "LOGICAL_AND", "LOGICAL_OR", "ASSIGN", "PLUS", 
			"MINUS", "MULT", "DIV", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", 
			"LT", "GT", "EQ", "NEQ", "LTE", "GTE", "WS", "COMMENT", "MULTILINE_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public StatementsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Statements.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\"\u00d8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0003\u0007"+
		"i\b\u0007\u0001\b\u0004\bl\b\b\u000b\b\f\bm\u0001\b\u0001\b\u0004\br\b"+
		"\b\u000b\b\f\bs\u0003\bv\b\b\u0001\t\u0001\t\u0005\tz\b\t\n\t\f\t}\t\t"+
		"\u0001\t\u0001\t\u0001\n\u0001\n\u0005\n\u0083\b\n\n\n\f\n\u0086\t\n\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001"+
		"\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0004"+
		"\u001f\u00ba\b\u001f\u000b\u001f\f\u001f\u00bb\u0001\u001f\u0001\u001f"+
		"\u0001 \u0001 \u0001 \u0001 \u0005 \u00c4\b \n \f \u00c7\t \u0001 \u0001"+
		" \u0001!\u0001!\u0001!\u0001!\u0005!\u00cf\b!\n!\f!\u00d2\t!\u0001!\u0001"+
		"!\u0001!\u0001!\u0001!\u0002{\u00d0\u0000\"\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"\u0001\u0000\u0005\u0001\u000009\u0003"+
		"\u0000AZ__az\u0004\u000009AZ__az\u0003\u0000\t\n\r\r  \u0002\u0000\n\n"+
		"\r\r\u00e0\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0001E\u0001"+
		"\u0000\u0000\u0000\u0003I\u0001\u0000\u0000\u0000\u0005L\u0001\u0000\u0000"+
		"\u0000\u0007Q\u0001\u0000\u0000\u0000\tW\u0001\u0000\u0000\u0000\u000b"+
		"[\u0001\u0000\u0000\u0000\r]\u0001\u0000\u0000\u0000\u000fh\u0001\u0000"+
		"\u0000\u0000\u0011k\u0001\u0000\u0000\u0000\u0013w\u0001\u0000\u0000\u0000"+
		"\u0015\u0080\u0001\u0000\u0000\u0000\u0017\u0087\u0001\u0000\u0000\u0000"+
		"\u0019\u008b\u0001\u0000\u0000\u0000\u001b\u008e\u0001\u0000\u0000\u0000"+
		"\u001d\u0091\u0001\u0000\u0000\u0000\u001f\u0094\u0001\u0000\u0000\u0000"+
		"!\u0096\u0001\u0000\u0000\u0000#\u0098\u0001\u0000\u0000\u0000%\u009a"+
		"\u0001\u0000\u0000\u0000\'\u009c\u0001\u0000\u0000\u0000)\u009e\u0001"+
		"\u0000\u0000\u0000+\u00a0\u0001\u0000\u0000\u0000-\u00a2\u0001\u0000\u0000"+
		"\u0000/\u00a4\u0001\u0000\u0000\u00001\u00a6\u0001\u0000\u0000\u00003"+
		"\u00a8\u0001\u0000\u0000\u00005\u00aa\u0001\u0000\u0000\u00007\u00ac\u0001"+
		"\u0000\u0000\u00009\u00af\u0001\u0000\u0000\u0000;\u00b2\u0001\u0000\u0000"+
		"\u0000=\u00b5\u0001\u0000\u0000\u0000?\u00b9\u0001\u0000\u0000\u0000A"+
		"\u00bf\u0001\u0000\u0000\u0000C\u00ca\u0001\u0000\u0000\u0000EF\u0005"+
		"v\u0000\u0000FG\u0005a\u0000\u0000GH\u0005r\u0000\u0000H\u0002\u0001\u0000"+
		"\u0000\u0000IJ\u0005i\u0000\u0000JK\u0005f\u0000\u0000K\u0004\u0001\u0000"+
		"\u0000\u0000LM\u0005e\u0000\u0000MN\u0005l\u0000\u0000NO\u0005s\u0000"+
		"\u0000OP\u0005e\u0000\u0000P\u0006\u0001\u0000\u0000\u0000QR\u0005w\u0000"+
		"\u0000RS\u0005h\u0000\u0000ST\u0005i\u0000\u0000TU\u0005l\u0000\u0000"+
		"UV\u0005e\u0000\u0000V\b\u0001\u0000\u0000\u0000WX\u0005f\u0000\u0000"+
		"XY\u0005o\u0000\u0000YZ\u0005r\u0000\u0000Z\n\u0001\u0000\u0000\u0000"+
		"[\\\u0005|\u0000\u0000\\\f\u0001\u0000\u0000\u0000]^\u0005p\u0000\u0000"+
		"^_\u0005r\u0000\u0000_`\u0005i\u0000\u0000`a\u0005n\u0000\u0000ab\u0005"+
		"t\u0000\u0000b\u000e\u0001\u0000\u0000\u0000cd\u0005y\u0000\u0000de\u0005"+
		"e\u0000\u0000ei\u0005s\u0000\u0000fg\u0005n\u0000\u0000gi\u0005o\u0000"+
		"\u0000hc\u0001\u0000\u0000\u0000hf\u0001\u0000\u0000\u0000i\u0010\u0001"+
		"\u0000\u0000\u0000jl\u0007\u0000\u0000\u0000kj\u0001\u0000\u0000\u0000"+
		"lm\u0001\u0000\u0000\u0000mk\u0001\u0000\u0000\u0000mn\u0001\u0000\u0000"+
		"\u0000nu\u0001\u0000\u0000\u0000oq\u0005.\u0000\u0000pr\u0007\u0000\u0000"+
		"\u0000qp\u0001\u0000\u0000\u0000rs\u0001\u0000\u0000\u0000sq\u0001\u0000"+
		"\u0000\u0000st\u0001\u0000\u0000\u0000tv\u0001\u0000\u0000\u0000uo\u0001"+
		"\u0000\u0000\u0000uv\u0001\u0000\u0000\u0000v\u0012\u0001\u0000\u0000"+
		"\u0000w{\u0005\"\u0000\u0000xz\t\u0000\u0000\u0000yx\u0001\u0000\u0000"+
		"\u0000z}\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000{y\u0001\u0000"+
		"\u0000\u0000|~\u0001\u0000\u0000\u0000}{\u0001\u0000\u0000\u0000~\u007f"+
		"\u0005\"\u0000\u0000\u007f\u0014\u0001\u0000\u0000\u0000\u0080\u0084\u0007"+
		"\u0001\u0000\u0000\u0081\u0083\u0007\u0002\u0000\u0000\u0082\u0081\u0001"+
		"\u0000\u0000\u0000\u0083\u0086\u0001\u0000\u0000\u0000\u0084\u0082\u0001"+
		"\u0000\u0000\u0000\u0084\u0085\u0001\u0000\u0000\u0000\u0085\u0016\u0001"+
		"\u0000\u0000\u0000\u0086\u0084\u0001\u0000\u0000\u0000\u0087\u0088\u0005"+
		"a\u0000\u0000\u0088\u0089\u0005n\u0000\u0000\u0089\u008a\u0005d\u0000"+
		"\u0000\u008a\u0018\u0001\u0000\u0000\u0000\u008b\u008c\u0005o\u0000\u0000"+
		"\u008c\u008d\u0005r\u0000\u0000\u008d\u001a\u0001\u0000\u0000\u0000\u008e"+
		"\u008f\u0005&\u0000\u0000\u008f\u0090\u0005&\u0000\u0000\u0090\u001c\u0001"+
		"\u0000\u0000\u0000\u0091\u0092\u0005|\u0000\u0000\u0092\u0093\u0005|\u0000"+
		"\u0000\u0093\u001e\u0001\u0000\u0000\u0000\u0094\u0095\u0005=\u0000\u0000"+
		"\u0095 \u0001\u0000\u0000\u0000\u0096\u0097\u0005+\u0000\u0000\u0097\""+
		"\u0001\u0000\u0000\u0000\u0098\u0099\u0005-\u0000\u0000\u0099$\u0001\u0000"+
		"\u0000\u0000\u009a\u009b\u0005*\u0000\u0000\u009b&\u0001\u0000\u0000\u0000"+
		"\u009c\u009d\u0005/\u0000\u0000\u009d(\u0001\u0000\u0000\u0000\u009e\u009f"+
		"\u0005(\u0000\u0000\u009f*\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005)"+
		"\u0000\u0000\u00a1,\u0001\u0000\u0000\u0000\u00a2\u00a3\u0005{\u0000\u0000"+
		"\u00a3.\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005}\u0000\u0000\u00a50"+
		"\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005;\u0000\u0000\u00a72\u0001\u0000"+
		"\u0000\u0000\u00a8\u00a9\u0005<\u0000\u0000\u00a94\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0005>\u0000\u0000\u00ab6\u0001\u0000\u0000\u0000\u00ac\u00ad"+
		"\u0005=\u0000\u0000\u00ad\u00ae\u0005=\u0000\u0000\u00ae8\u0001\u0000"+
		"\u0000\u0000\u00af\u00b0\u0005!\u0000\u0000\u00b0\u00b1\u0005=\u0000\u0000"+
		"\u00b1:\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005<\u0000\u0000\u00b3\u00b4"+
		"\u0005=\u0000\u0000\u00b4<\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005>"+
		"\u0000\u0000\u00b6\u00b7\u0005=\u0000\u0000\u00b7>\u0001\u0000\u0000\u0000"+
		"\u00b8\u00ba\u0007\u0003\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00b9\u0001\u0000\u0000\u0000"+
		"\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000"+
		"\u00bd\u00be\u0006\u001f\u0000\u0000\u00be@\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c0\u0005/\u0000\u0000\u00c0\u00c1\u0005/\u0000\u0000\u00c1\u00c5\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c4\b\u0004\u0000\u0000\u00c3\u00c2\u0001\u0000"+
		"\u0000\u0000\u00c4\u00c7\u0001\u0000\u0000\u0000\u00c5\u00c3\u0001\u0000"+
		"\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000\u00c6\u00c8\u0001\u0000"+
		"\u0000\u0000\u00c7\u00c5\u0001\u0000\u0000\u0000\u00c8\u00c9\u0006 \u0000"+
		"\u0000\u00c9B\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005/\u0000\u0000\u00cb"+
		"\u00cc\u0005*\u0000\u0000\u00cc\u00d0\u0001\u0000\u0000\u0000\u00cd\u00cf"+
		"\t\u0000\u0000\u0000\u00ce\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d2\u0001"+
		"\u0000\u0000\u0000\u00d0\u00d1\u0001\u0000\u0000\u0000\u00d0\u00ce\u0001"+
		"\u0000\u0000\u0000\u00d1\u00d3\u0001\u0000\u0000\u0000\u00d2\u00d0\u0001"+
		"\u0000\u0000\u0000\u00d3\u00d4\u0005*\u0000\u0000\u00d4\u00d5\u0005/\u0000"+
		"\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6\u00d7\u0006!\u0000\u0000"+
		"\u00d7D\u0001\u0000\u0000\u0000\n\u0000hmsu{\u0084\u00bb\u00c5\u00d0\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}